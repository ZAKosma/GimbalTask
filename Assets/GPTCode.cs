using UnityEngine;


/***
 * !!! - NOT REAL WORKING CODE - !!!
 *
 * This was generated by ChatGPT to generate a template for actual scripting
 *
 * This code was generated using the following prompt:
"Generate C# code for object manipulation, meeting the following requirements:

- Translation, rotation, and scaling of object on x, y, z axes via gimbal controls and mouse click
    - Note - your build does not need to work in XR
- Any mesh is acceptable i.e. the standard Unity cube is fine
- The gimbal handles do not need to aesthetically match the above spec. Colors / materials are irrelevant and placeholder meshes are fine
- The purpose of this exercise is to demonstrate your ability to code functionality - not aesthetics or animations - in a polished manner as well as document your work effectively"
 */
public class GPTCode : MonoBehaviour
{
    // Variables to store the gimbal controls
    public Transform xGimbal;
    public Transform yGimbal;
    public Transform zGimbal;

    // Variables to store the initial mouse position and the offset from the gimbal control
    private Vector3 initialMousePos;
    private Vector3 offset;

    // Variable to store the selected gimbal control
    private Transform selectedGimbal;

    void Update()
    {
        // Check if the left mouse button is pressed
        if (Input.GetMouseButtonDown(0))
        {
            // Store the initial mouse position
            initialMousePos = Input.mousePosition;

            // Raycast to check if a gimbal control is selected
            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
            RaycastHit hit;

            if (Physics.Raycast(ray, out hit))
            {
                // Check if the hit object is a gimbal control
                if (hit.transform.CompareTag("GimbalControl"))
                {
                    selectedGimbal = hit.transform;
                    offset = selectedGimbal.position - transform.position;
                }
            }
        }
        else if (Input.GetMouseButton(0))
        {
            // Calculate the mouse movement delta
            Vector3 mouseDelta = Input.mousePosition - initialMousePos;

            // Check if a gimbal control is selected
            if (selectedGimbal != null)
            {
                // Perform the appropriate transformation based on the selected gimbal control
                if (selectedGimbal == xGimbal)
                {
                    transform.RotateAround(transform.position, transform.right, -mouseDelta.y * 0.1f);
                }
                else if (selectedGimbal == yGimbal)
                {
                    transform.RotateAround(transform.position, transform.up, mouseDelta.x * 0.1f);
                }
                else if (selectedGimbal == zGimbal)
                {
                    Vector3 newPos = transform.position + transform.forward * mouseDelta.y * 0.01f;
                    transform.position = newPos;
                }

                // Update the initial mouse position
                initialMousePos = Input.mousePosition;
            }
        }
        else if (Input.GetMouseButtonUp(0))
        {
            // Reset the selected gimbal control
            selectedGimbal = null;
        }
    }
}